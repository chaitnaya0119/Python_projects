# -*- coding: utf-8 -*-
"""Stock Market Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZEDZBnGVL8oisCJJ_BVbEUBlzRM5H3o6
"""

import pandas as pd

import numpy as np

import plotly.express as px

import plotly.graph_objects as go

import datetime

from datetime import date,timedelta

"""**Now we are using Yahoo Finance API in python to retrieve real time data of a company**"""

import yfinance as yf

today=date.today()

d1 = today.strftime('%Y-%m-%d')

end_date =d1

"""**Analysing the data that is from 1year back from today**"""

d2= date.today()-timedelta(days=365)

d2=d2.strftime('%Y-%m-%d')

start_date = d2

"""**Downloading Tata Consultancy Service Data from Yahoo Finance Website**"""

data = yf.download('TCS.NS',start_date,end_date,progress=False)

data.head()

data.isnull().sum()

data.describe()

data.info()

data.shape

data.columns

data['Date'] = data.index

data.head()

#figure = go.Figure(data=[go.Candlestick(x=data["Date"],
#                                       open=data["Open"], high=data["High"],
#                                       low=data["Low"], close=data["Close"])])
#figure.update_layout(title = "TCS Stock Price Analysis", xaxis_rangeslider_visible=False)
#figure.show()

fig = go.Figure()

fig.add_trace(go.Candlestick(x=data['Date'],open=data['Open'],high=data['High'],low=data['Low'],close=data['Close']))
fig.update_layout(title_text='')
fig.show()

fig2 = px.bar(data,x=data['Date'],y=data['Close'])
fig2.update_layout(title='Visualizing the close prices of TCS over date')
fig2.show()

fig3 = px.line(data,x='Date',y=['Close','Open'],title='Stock Market Analysis')
fig3.update_xaxes(rangeslider_visible= True)
fig3.show()

fig4 = px.line(data,x='Date',y='Close',title='Stock Market Analysis Using Time Period Selectors')
fig4.update_xaxes(rangeselector=dict(
    buttons=list([
        dict(count=1,label='1m',step='month',stepmode='backward'),
        dict(count=3,label='3m',step='month',stepmode='backward'),
        dict(count=6,label='6m',step='month',stepmode='backward'),
        dict(count=1,label='1y',step='year',stepmode='backward'),
        dict(step='all')
    ])
))
fig4.show()

fig5 = px.scatter(data,x='Date',y='Close',range_x=['2022-07-12', '2023'],title='Stock Market Analysis by Hiding Weekend Gaps')
fig5.update_xaxes(rangebreaks =[ dict(bounds=['sat','sun'])])
fig5.show()